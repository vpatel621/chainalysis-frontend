{"version":3,"sources":["Components/TableRows.js","Components/Tables.js","Components/HistoricalChart.js","App.js","reportWebVitals.js","index.js","utility.js"],"names":["TableRows","props","change","price","className","Tables","data","buyOrSell","type","tableTitle","titleFormatter","coinName","name","imgLink","imageUrl","Table","variant","map","item","idx","alt","src","width","height","source","LineGraph","prices","dates","arr","Date","toLocaleDateString","values","labels","datasets","label","fill","borderWidth","backgroundColor","borderColor","responsive","options","plugins","legend","boxWidth","font","size","color","display","App","useState","allCoinPrices","setAllCoinPrices","historical","setHistorical","filterHistorical","setFilterHistorical","filterSell","setFilterSell","filterBuy","setFilterBuy","bitcoinBuy","setBitcoinBuy","bitcoinSell","setBitcoinSell","ethereumBuy","setEthereumBuy","ethereumSell","setEthereumSell","coinSelect","setcoinSelect","isLoading","setLoading","url","process","URL","filterMethod","useEffect","setTimeout","sseClient","EventSource","addEventListener","message","res","history","filterAndSort","getRealtimeData","JSON","parse","onerror","close","timeout","btc","onClick","eth","id","style","textAlign","marginRight","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports","string","slice","length","charAt","toUpperCase","state","filter","coin","sort","one","two"],"mappings":"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","file":"static/js/main.7eed693e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function TableRows(props) {\n  const { change, price } = props.props;\n  if (change > 0.01) {\n    return <td className='green'>{price}</td>;\n  } else if (change < -0.01) {\n    return <td className='red'>{price}</td>;\n  } else {\n    return <td className='default'>{price}</td>;\n  }\n}\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport TableRows from './TableRows';\nimport { imageUrl, titleFormatter } from '../utility.js';\n\nexport default function Tables(props) {\n  const { data } = props;\n\n  let buyOrSell = data[0].type;\n  let tableTitle = titleFormatter(buyOrSell);\n\n  let coinName = data[0].name;\n  const imgLink = imageUrl(coinName);\n\n  return (\n    <div className='currentPricesTable'>\n      <Table variant='dark'>\n        <caption className='default'> {tableTitle} Prices (USD) </caption>\n\n        <thead>\n          <tr>\n            <th> </th>\n            <th className='default'>Exchange</th>\n            <th className='default'>Price</th>\n          </tr>\n        </thead>\n        <tbody className='default'>\n          {data.map((item, idx) => {\n            return (\n              <tr key={item.source}>\n                <td>\n                  <img alt='' src={imgLink} width='30' height='30' />\n                </td>\n                <td>{item.source}</td>\n                <TableRows props={item} />\n                {idx === 0 ? <div>*</div> : null}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction LineGraph(props) {\n  const { prices, name } = props.props;\n\n  const dates = prices.map((arr) =>\n    new Date(arr[0]).toLocaleDateString('en-US')\n  );\n  const values = prices.map((arr) => arr[1]);\n  return (\n    <div>\n      <Line\n        data={{\n          // x-axis label values\n          labels: dates,\n          datasets: [\n            {\n              label: `${name} Price (USD)`,\n              // y-axis data plotting values\n              data: values,\n              fill: false,\n              borderWidth: 4,\n              // backgroundColor: 'rgb(255, 99, 132)',\n              backgroundColor: '#1ed760',\n              // borderColor: '#3BD16F',\n              borderColor: '#1ed760',\n              responsive: true,\n            },\n          ],\n        }}\n        options={{\n          plugins: {\n            legend: {\n              labels: {\n                boxWidth: 0,\n                font: {\n                  size: 38,\n                },\n                color: '#aaa',\n              },\n\n              display: true,\n            },\n            backgroundColor: '#3BD16F',\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import React, { useState, useEffect } from 'react';\nimport Tables from './Components/Tables.js';\nimport { filterAndSort } from './utility.js';\n\nimport btc from '../node_modules/cryptocurrency-icons/32/color/btc.png';\nimport eth from '../node_modules/cryptocurrency-icons/32/color/eth.png';\nimport LineGraph from './Components/HistoricalChart';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nexport default function App() {\n  const [allCoinPrices, setAllCoinPrices] = useState([]);\n  const [historical, setHistorical] = useState([]);\n  const [filterHistorical, setFilterHistorical] = useState([]);\n  const [filterSell, setFilterSell] = useState([]);\n  const [filterBuy, setFilterBuy] = useState([]);\n  const [bitcoinBuy, setBitcoinBuy] = useState([]);\n  const [bitcoinSell, setBitcoinSell] = useState([]);\n  const [ethereumBuy, setEthereumBuy] = useState([]);\n  const [ethereumSell, setEthereumSell] = useState([]);\n  const [coinSelect, setcoinSelect] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n\n  const url = process.env.URL || 'http://localhost:3030/';\n\n  useEffect(() => {\n    setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n\n    const sseClient = new EventSource(url);\n    sseClient.addEventListener('CACHE_UPDATE', (message) => {\n      getRealtimeData(JSON.parse(message.data));\n    });\n\n    function getRealtimeData(res) {\n      const { data, history } = res;\n\n      setAllCoinPrices(data);\n      setHistorical(history);\n      setEthereumBuy(filterAndSort(allCoinPrices, 'ETH', 'buyer'));\n      setEthereumSell(filterAndSort(allCoinPrices, 'ETH', 'seller'));\n      setBitcoinBuy(filterAndSort(allCoinPrices, 'BTC', 'buyer'));\n      setBitcoinSell(filterAndSort(allCoinPrices, 'BTC', 'seller'));\n      if (coinSelect) {\n        filterMethod(filterBuy[0].name);\n      }\n    }\n\n    sseClient.onerror = () => {\n      sseClient.close();\n    };\n    return () => {\n      sseClient.close();\n    };\n  }, [allCoinPrices, filterBuy, coinSelect, filterSell, filterMethod, url]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function filterMethod(type) {\n    setcoinSelect(true);\n\n    if (type === 'BTC') {\n      setFilterBuy(bitcoinBuy);\n      setFilterSell(bitcoinSell);\n      setFilterHistorical(historical[0]);\n    } else {\n      setFilterBuy(ethereumBuy);\n      setFilterSell(ethereumSell);\n      setFilterHistorical(historical[1]);\n    }\n  }\n\n  return (\n    <div className='container'>\n      {isLoading ? (\n        <Loader\n          type='Puff'\n          color='#00BFFF'\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      ) : (\n        <div>\n          <h2>Cryptocurrencies</h2>\n          <div>\n            <img src={btc} alt='' onClick={() => filterMethod('BTC')} />\n            <span> </span>\n            <img src={eth} alt='' onClick={() => filterMethod('ETH')} />\n          </div>\n          <div>\n            {coinSelect ? (\n              <div>\n                <div id='graph'>\n                  <LineGraph props={filterHistorical} />\n                </div>\n                <Tables data={filterBuy} />\n                <Tables data={filterSell} />\n                <div\n                  style={{\n                    textAlign: 'right',\n                    marginRight: '5%',\n                    fontSize: 'x-small',\n                  }}\n                >\n                  *Best price\n                </div>\n              </div>\n            ) : (\n              <div>Choose a currency</div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function imageUrl(name) {\n  switch (name) {\n    case 'ETH':\n      return 'https://cryptologos.cc/logos/ethereum-eth-logo.png';\n    case 'BTC':\n      return 'https://cryptologos.cc/logos/bitcoin-btc-logo.png';\n    default:\n      return 'src/ethereum-eth-logo.png';\n  }\n}\n\nfunction titleFormatter(string) {\n  string = string.slice(0, string.length - 2);\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction filterAndSort(state, name, type) {\n  if (type === 'buyer') {\n    return state\n      .filter((coin) => coin.name === name && coin.type === type)\n      .sort((one, two) => one.price - two.price);\n  } else {\n    return state\n      .filter((coin) => coin.name === name && coin.type === type)\n      .sort((one, two) => two.price - one.price);\n  }\n}\n\nmodule.exports = { imageUrl, titleFormatter, filterAndSort };\n"],"sourceRoot":""}